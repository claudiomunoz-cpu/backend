#!/usr/bin/env node

/**
 * Script para ejecutar la limpieza de tablas obsoletas
 * Elimina: cursos_documentos y cursos_certificaciones
 */

const path = require('path');
const fs = require('fs');

// Cambiar al directorio del proyecto
process.chdir(__dirname + '/..');

// Verificar que existe el archivo de configuraci√≥n
if (!fs.existsSync('./config/postgresql.js')) {
  console.error('‚ùå No se encontr√≥ el archivo de configuraci√≥n PostgreSQL');
  console.error('   Aseg√∫rate de estar en el directorio correcto del proyecto');
  process.exit(1);
}

// Importar despu√©s de cambiar el directorio
const { cleanupOldTables, checkCleanupStatus } = require('./cleanup-old-tables');

console.log('üßπ EJECUTANDO LIMPIEZA DE TABLAS OBSOLETAS');
console.log('üìÅ Directorio de trabajo:', process.cwd());
console.log('‚è∞ Fecha:', new Date().toISOString());
console.log('=' .repeat(60));

const command = process.argv[2];

if (command === 'check') {
  console.log('üîç Verificando estado de limpieza...');
  checkCleanupStatus()
    .then(() => {
      console.log('\n‚úÖ Verificaci√≥n completada');
      process.exit(0);
    })
    .catch(error => {
      console.error('\n‚ùå Error en verificaci√≥n:', error.message);
      process.exit(1);
    });
} else {
  console.log('‚ö†Ô∏è ADVERTENCIA: Se eliminar√°n las siguientes tablas:');
  console.log('   - cursos_documentos');
  console.log('   - cursos_certificaciones');
  console.log('\nüìã Aseg√∫rate de que:');
  console.log('   1. Los datos fueron migrados a la tabla documentos');
  console.log('   2. Todos los endpoints funcionan correctamente');
  console.log('   3. No hay aplicaciones que dependan de estas tablas');
  console.log('\nüöÄ Iniciando limpieza...');
  
  cleanupOldTables()
    .then(() => {
      console.log('\n‚úÖ LIMPIEZA COMPLETADA EXITOSAMENTE');
      console.log('üéØ Pr√≥ximos pasos:');
      console.log('   1. Verificar que todos los endpoints funcionan');
      console.log('   2. Probar la funcionalidad de documentos');
      console.log('   3. Actualizar documentaci√≥n si es necesario');
      process.exit(0);
    })
    .catch(error => {
      console.error('\n‚ùå ERROR EN LA LIMPIEZA:');
      console.error(error.message);
      console.error('\nüîß Soluciones posibles:');
      console.error('   1. Verificar que la migraci√≥n fue exitosa');
      console.error('   2. Verificar permisos de usuario');
      console.error('   3. Verificar que no hay dependencias activas');
      process.exit(1);
    });
}



